{"version":3,"sources":["img/healthy_habits.png","components/SignUp.js","components/LogIn.js","components/FormContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FormItem","Form","Item","Option","Select","SignUp","withFormik","mapPropsToValues","firstname","lastname","email","username","password","age","gender","feet","inches","weight","activity","goals","validationSchema","Yup","shape","required","handleSubmit","values","resetForm","setStatus","axios","post","then","response","console","log","catch","error","errors","touched","className","name","render","field","placeholder","prefix","type","style","color","label","value","display","justifyContent","width","htmlType","LogIn","props","status","FormContainer","useState","returningUser","setReturningUser","OtherOption","text","onClick","src","img","alt","class","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,4C,6QCWrCC,EAAWC,IAAKC,KACfC,EAAUC,IAAVD,OAoNQE,EA/DAC,YAAW,CAEtBC,iBAFsB,YAGlB,MAAO,CACHC,UAF8G,EAApGA,WAEc,GACxBC,SAH8G,EAAzFA,UAGC,GACtBC,MAJ8G,EAA/EA,OAIf,GAChBC,SAL8G,EAAxEA,UAKhB,GACtBC,SAN8G,EAA9DA,UAM1B,GACtBC,IAP8G,EAApDA,KAO9C,GACZC,OAR8G,EAA/CA,QAQ7C,OAClBC,KAT8G,EAAvCA,MASzD,EACdC,OAV8G,EAAjCA,QAU3D,EAClBC,OAX8G,EAAzBA,QAWnE,IAClBC,SAZ8G,EAAjBA,UAYvE,EACtBC,MAb8G,EAAPA,QAatF,KAIzBC,iBAAkBC,WAAaC,MAAM,CACjCd,UAAWa,WACVE,SAAS,gCACVd,SAAUY,WACTE,SAAS,+BACVb,MAAOW,WACNX,MAAM,+BACNa,SAAS,6CACVZ,SAAUU,WACTE,SAAS,6CACVX,SAAUS,WACTE,SAAS,2BACVV,IAAKQ,WACJE,SAAS,mBACVT,OAAQO,WACPE,SAAS,0BACVR,KAAMM,WACLE,SAAS,yBACVP,OAAQK,WACPE,SAAS,0BACVN,OAAQI,WACPE,SAAS,4BACVL,SAAUG,WACTE,SAAS,mCACVJ,MAAOE,WACNE,SAAS,0BAGdC,aA/CsB,SA+CTC,EA/CS,GA+CuB,IAAvBC,EAAsB,EAAtBA,UAAsB,EAAXC,UAC7BC,IACCC,KAAK,+BAAgCJ,GACrCK,MAAK,SAAAC,GACFC,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAMJ,aAClCL,MAtDOpB,EAnJI,SAAC,GAA8B,EAA7BmB,OAA8B,IAAtBW,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAEjC,OACI,6BACI,wCACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACrC,EAAD,KACCqC,EAAQ7B,WAAa4B,EAAO5B,WAAa,uBAAG8B,UAAU,iBAAiBF,EAAO5B,WAC/E,kBAAC,IAAD,CACI+B,KAAK,YACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,iBACnBA,EADmB,CACZF,KAAK,YAAYG,YAAY,oBAI5C,kBAAC1C,EAAD,KACCqC,EAAQ5B,UAAY2B,EAAO3B,UAAY,uBAAG6B,UAAU,iBAAiBF,EAAO3B,UAC7E,kBAAC,IAAD,CACI8B,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,iBACnBA,EADmB,CACZF,KAAK,WAAWG,YAAY,mBAI3C,kBAAC1C,EAAD,KACCqC,EAAQ3B,OAAS0B,EAAO1B,OAAS,uBAAG4B,UAAU,iBAAiBF,EAAO1B,OACvE,kBAAC,IAAD,CACI6B,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,eACvBE,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBACtCL,EAFmB,CAEZF,KAAK,QAAQG,YAAY,eAIxC,kBAAC1C,EAAD,KACCqC,EAAQ1B,UAAYyB,EAAOzB,UAAY,uBAAG2B,UAAU,iBAAiBF,EAAOzB,UAC7E,kBAAC,IAAD,CACI4B,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,eACvBE,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBACtCL,EAFmB,CAEZF,KAAK,WAAWG,YAAY,kBAI3C,kBAAC1C,EAAD,KACCqC,EAAQzB,UAAYwB,EAAOxB,UAAY,uBAAG0B,UAAU,iBAAiBF,EAAOxB,UAC7E,kBAAC,IAAD,CACI2B,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,eACvBE,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBACtCL,EAFmB,CAEZF,KAAK,WAAWK,KAAK,WAAWF,YAAY,kBAI3D,kBAAC1C,EAAD,KACKqC,EAAQxB,KAAOuB,EAAOvB,KAAO,uBAAGyB,UAAU,iBAAiBF,EAAOvB,KACnE,kBAAC,IAAD,CACI0B,KAAK,MACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,iBACnBA,EADmB,CACZF,KAAK,MAAMG,YAAY,aAI1C,kBAAC1C,EAAD,CAAU+C,MAAM,UACXV,EAAQvB,QAAUsB,EAAOtB,QAAU,uBAAGwB,UAAU,iBAAiBF,EAAOtB,QACzE,kBAAC,IAAD,CAAQyB,KAAK,SAASG,YAAY,6BAC9B,kBAACvC,EAAD,CAAQ6C,MAAM,QAAd,QACA,kBAAC7C,EAAD,CAAQ6C,MAAM,UAAd,YAMR,yBAAKH,MAAO,CAACI,QAAQ,OAAQC,eAAgB,iBAC5Cb,EAAQtB,MAAQqB,EAAOrB,MAAQ,uBAAGuB,UAAU,iBAAiBF,EAAOrB,MACpEsB,EAAQrB,QAAUoB,EAAOpB,QAAU,uBAAGsB,UAAU,iBAAiBF,EAAOpB,QACrE,kBAAChB,EAAD,CAAU+C,MAAM,QACZ,kBAAC,IAAD,CAAQR,KAAK,OAAOG,YAAY,KAAKG,MAAO,CAACM,MAAO,MAChD,kBAAChD,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,OAKR,kBAAChD,EAAD,CAAU+C,MAAM,SAAUF,MAAO,CAACM,MAAO,MACrC,kBAAC,IAAD,CAAQZ,KAAK,SAASG,YAAY,MAC9B,kBAACvC,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,KACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,QAMZ,kBAAChD,EAAD,KACCqC,EAAQpB,QAAUmB,EAAOnB,QAAU,uBAAGqB,UAAU,iBAAiBF,EAAOnB,QACzE,kBAAC,IAAD,CACIsB,KAAK,SACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,iBACnBA,EADmB,CACZF,KAAK,SAASK,KAAK,SAASF,YAAY,qBAKvD,kBAAC1C,EAAD,KACCqC,EAAQnB,UAAYkB,EAAOlB,UAAY,uBAAGoB,UAAU,iBAAiBF,EAAOlB,UACzE,kBAAC,IAAD,CAAQqB,KAAK,WAAWG,YAAY,mCAChC,kBAACvC,EAAD,CAAQ6C,MAAM,KAAd,UACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,YACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,YACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,YACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,YAIR,kBAAChD,EAAD,KACKqC,EAAQlB,OAASiB,EAAOjB,OAAS,uBAAGmB,UAAU,iBAAiBF,EAAOjB,OACvE,kBAAC,IAAD,CAAQoB,KAAK,QAAQG,YAAY,uBAC7B,kBAACvC,EAAD,CAAQ6C,MAAM,OAAd,wCACA,kBAAC7C,EAAD,CAAQ6C,MAAM,OAAd,sCACA,kBAAC7C,EAAD,CAAQ6C,MAAM,OAAd,6BACA,kBAAC7C,EAAD,CAAQ6C,MAAM,KAAd,mBACA,kBAAC7C,EAAD,CAAQ6C,MAAM,MAAd,wCAIR,kBAAC,IAAD,CAAQJ,KAAK,UAAUQ,SAAS,UAAhC,iBC/IdpD,EAAWC,IAAKC,KAiEPmD,EA1BD/C,YAAW,CACrBC,iBADqB,YAElB,MAAO,CACNI,SAFkC,EAApBA,UAEQ,GACtBC,SAHkC,EAAVA,UAGF,KAE1BQ,iBAAiBC,WAAaC,MAAM,CAChCX,SAAUU,WACTE,SAAS,8BAEVX,SAAUS,WACTE,SAAS,gCAGdC,aAdqB,SAcRC,EAdQ,GAcwB,IAAvBC,EAAsB,EAAtBA,UAAsB,EAAXC,UAC7BC,IACCC,KAAK,+BAAgCJ,GACrCK,MAAK,SAAAC,GACFC,QAAQC,IAAIR,EAAOd,aAEtBuB,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAMJ,aAClCL,MArBMpB,EArCI,SAAC,EAA2BgD,GAAU,IAApCjB,EAAmC,EAAnCA,QAASD,EAA0B,EAA1BA,OAA0B,EAAlBmB,OAGjC,OACI,6BACI,qCACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACKlB,EAAQ1B,UAAYyB,EAAOzB,UAAY,uBAAG2B,UAAU,iBAAiBF,EAAOzB,UAE7E,kBAAC,IAAD,CACI4B,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,eACvBE,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,sBACtCL,EAFmB,CAEZF,KAAK,WAAWG,YAAY,kBAI/C,kBAAC,EAAD,KACCL,EAAQzB,UAAYwB,EAAOxB,UAAY,uBAAG0B,UAAU,iBAAiBF,EAAOxB,UAE7E,kBAAC,IAAD,CACI2B,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,kBAAC,IAAD,iBAAWA,EAAX,CACvBE,OAAQ,kBAAC,IAAD,CAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAC1CP,KAAK,WAAWK,KAAK,WAAWF,YAAY,kBAGpD,kBAAC,IAAD,CAAQE,KAAK,UAAUQ,SAAS,UAAhC,e,2BCiBDI,EAtCO,SAAAF,GAAU,IAAD,EACeG,oBAAS,GADxB,mBACpBC,EADoB,KACLC,EADK,KAIrBC,EAAc,SAACN,GAEjB,OACI,6BACI,2BAAIA,EAAMO,MACV,kBAAC,IAAD,CAAQC,QAAS,kBAPJH,GAAkBD,KAOOJ,EAAMP,SAIxD,OAEK,yBAAKT,UAAU,aACR,yBAAKA,UAAU,iBACX,yBAAKO,MAAO,CAACM,MAAO,QAASY,IAAKC,IAAKC,IAAI,aAE/C,yBAAKC,MAAM,cAIX,yBAAKA,MAAM,eAEFR,EAAiB,kBAAC,EAAD,MAAY,kBAAC,EAAD,MAI7BA,EAAiB,kBAACE,EAAD,CAAaC,KAAK,yBAAyBd,MAAM,YAAc,kBAACa,EAAD,CAAaC,KAAM,4BAA4Bd,MAAM,cChC/IoB,MAXf,WAEE,OAEE,yBAAK7B,UAAU,OAEf,kBAAC,EAAD,QCAgB8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASjC,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBkC,SAASC,eAAe,SD0H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,MAAK,SAAAiD,GACjCA,EAAaC,kB","file":"static/js/main.c1e5024a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/healthy_habits.e7b9ca51.png\";","\r\nimport React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {withFormik, Field as FormikField, Form as FormikForm} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox, Select } from 'antd';\r\n\r\nimport axios from 'axios'\r\n\r\nconst FormItem = Form.Item\r\nconst {Option} = Select\r\n//Sign up form\r\nconst SignUpForm = ({values, errors, touched}) => {\r\n  \r\n    return(\r\n        <div>\r\n            <h1>Register</h1>\r\n            <FormikForm>\r\n                <Form>\r\n                    <FormItem>\r\n                    {touched.firstname && errors.firstname && <p className=\"error_message\">{errors.firstname}</p>}\r\n                    <FormikField\r\n                        name=\"firstname\"\r\n                        render={({ field }) => <Input \r\n                        {...field} name=\"firstname\" placeholder=\"First Name\" />}\r\n                            />\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                    {touched.lastname && errors.lastname && <p className=\"error_message\">{errors.lastname}</p>}\r\n                    <FormikField\r\n                        name=\"lastname\"\r\n                        render={({ field }) => <Input \r\n                        {...field} name=\"lastname\" placeholder=\"Last Name\" />}\r\n                            />\r\n                    </FormItem>\r\n                    \r\n                    <FormItem>\r\n                    {touched.email && errors.email && <p className=\"error_message\">{errors.email}</p>}\r\n                    <FormikField\r\n                        name=\"email\"\r\n                        render={({ field }) => <Input \r\n                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        {...field} name=\"email\" placeholder=\"email\" />}\r\n                            />\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                    {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n                    <FormikField\r\n                        name=\"username\"\r\n                        render={({ field }) => <Input \r\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        {...field} name=\"username\" placeholder=\"UserName\" />}\r\n                            />\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                    {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n                    <FormikField\r\n                        name=\"password\"\r\n                        render={({ field }) => <Input \r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        {...field} name=\"password\" type=\"password\" placeholder=\"password\" />}\r\n                            />\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        {touched.age && errors.age && <p className=\"error_message\">{errors.age}</p>}\r\n                        <FormikField\r\n                            name=\"age\"\r\n                            render={({ field }) => <Input \r\n                            {...field} name=\"age\" placeholder=\"Age\" />}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    <FormItem label=\"Select\">\r\n                        {touched.gender && errors.gender && <p className=\"error_message\">{errors.gender}</p>}\r\n                        <Select name=\"gender\" placeholder=\"Please select your gender\" >\r\n                            <Option value='Male'>Male</Option>\r\n                            <Option value='Female'>Female</Option>\r\n                        </Select>\r\n                    </FormItem>\r\n\r\n\r\n                   \r\n                    <div style={{display:\"flex\", justifyContent: \"space-around\" }}>\r\n                    {touched.feet && errors.feet && <p className=\"error_message\">{errors.feet}</p>}\r\n                    {touched.inches && errors.inches && <p className=\"error_message\">{errors.inches}</p>}\r\n                        <FormItem label=\"Feet\">\r\n                            <Select name=\"feet\" placeholder=\"ft\" style={{width: 120}}>\r\n                                <Option value=\"1\">1</Option>\r\n                                <Option value=\"2\">2</Option>\r\n                                <Option value=\"3\">3</Option>\r\n                                <Option value=\"4\">4</Option>\r\n                                <Option value=\"5\">5</Option>\r\n                                <Option value=\"6\">6</Option> \r\n                            </Select>\r\n                        </FormItem>\r\n                        \r\n\r\n                        <FormItem label=\"inches\"  style={{width: 120}}>\r\n                            <Select name=\"inches\" placeholder=\"in\">\r\n                                <Option value=\"0\">0</Option>\r\n                                <Option value=\"1\">1</Option>\r\n                                <Option value=\"2\">2</Option>\r\n                                <Option value=\"3\">3</Option>\r\n                                <Option value=\"4\">4</Option>\r\n                                <Option value=\"5\">5</Option>\r\n                                <Option value=\"6\">6</Option>\r\n                                <Option value=\"7\">7</Option>\r\n                                <Option value=\"8\">8</Option>\r\n                                <Option value=\"9\">9</Option>\r\n                            </Select>\r\n\r\n                        </FormItem>\r\n                    </div>\r\n                    \r\n                    <FormItem>\r\n                    {touched.weight && errors.weight && <p className=\"error_message\">{errors.weight}</p>}\r\n                    <FormikField\r\n                        name=\"weight\"\r\n                        render={({ field }) => <Input \r\n                        {...field} name=\"weight\" type=\"number\" placeholder=\"weight(lbs)\" />}\r\n                            />\r\n                    </FormItem>\r\n\r\n                    \r\n                    <FormItem>\r\n                    {touched.activity && errors.activity && <p className=\"error_message\">{errors.activity}</p>}\r\n                        <Select name='activity' placeholder=\"Please select an activity level\">\r\n                            <Option value=\"0\">0 days</Option>\r\n                            <Option value=\"2\">1-2 days</Option>\r\n                            <Option value=\"4\">3-4 days</Option>\r\n                            <Option value=\"6\">5-6 days</Option>\r\n                            <Option value=\"7\">7 days</Option>\r\n                        </Select>\r\n                    </FormItem>\r\n                    \r\n                    <FormItem>\r\n                        {touched.goals && errors.goals && <p className=\"error_message\">{errors.goals}</p>}\r\n                        <Select name=\"goals\" placeholder=\"Plese select a goal\">\r\n                            <Option value=\"-20\">aggressive weight loss (20% deficit)</Option>\r\n                            <Option value=\"-15\">moderate weight loss (15% deficit)</Option>\r\n                            <Option value=\"-10\">weight loss (10% deficit)</Option>\r\n                            <Option value=\"0\">maintain weight</Option>\r\n                            <Option value=\"10\">moderate weight gain (10% surplus)</Option>\r\n                        </Select>\r\n                    </FormItem>\r\n\r\n                    <Button type='primary' htmlType=\"submit\" >Sign Up</Button>\r\n                </Form>\r\n            </FormikForm>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n//used formik to manage form\r\nconst SignUp = withFormik({\r\n\r\n    mapPropsToValues({firstname, lastname, email, username, password, age, gender, feet, inches, weight, activity, goals}){\r\n        return {\r\n            firstname: firstname || \"\", \r\n            lastname: lastname || \"\",\r\n            email: email || \"\", \r\n            username: username || \"\", \r\n            password: password || \"\",\r\n            age: age || 25, \r\n            gender: gender || \"male\", \r\n            feet: feet || 5, \r\n            inches: inches || 9, \r\n            weight: weight || 180, \r\n            activity: activity || 0, \r\n            goals: goals || -10\r\n        }\r\n\r\n    }, \r\n    validationSchema: Yup.object().shape({\r\n        firstname: Yup.string() \r\n        .required('Please enter your first name'), \r\n        lastname: Yup.string()\r\n        .required('Please enter your last name'), \r\n        email: Yup.string()\r\n        .email('Please enter a valid email ')\r\n        .required('An email is required to create an account'), \r\n        username: Yup.string()\r\n        .required('An username required to create an account'), \r\n        password: Yup.string()\r\n        .required('Please enter a password'), \r\n        age: Yup.number()\r\n        .required('Age is required'), \r\n        gender: Yup.string()\r\n        .required('Please select a gender'), \r\n        feet: Yup.number()\r\n        .required('Please enter you feet'), \r\n        inches: Yup.number()\r\n        .required('Please enter your feet'), \r\n        weight: Yup.number()\r\n        .required('Please enter your weight'),\r\n        activity: Yup.number()\r\n        .required('Please select an acitivty level'), \r\n        goals: Yup.number()\r\n        .required('Please select a goal')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        axios\r\n        .post('https://reqres.in/api/users/', values)\r\n        .then(response => {\r\n            console.log(response)\r\n        })\r\n        .catch(error => console.log(error.response))\r\n        resetForm()\r\n\r\n    }\r\n\r\n})(SignUpForm)\r\n\r\n\r\n\r\n\r\nexport default SignUp","import React, {useState, useEffect} from 'react'\r\nimport {withFormik, Field, Form as FormikForm, Field as FormikField} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n//ant\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst LogInForm = ({touched, errors, status}, props) =>{\r\n   \r\n    \r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <FormikForm>\r\n                \r\n                <Form>\r\n                    <FormItem>\r\n                        {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n                        \r\n                        <FormikField\r\n                            name=\"username\"\r\n                            render={({ field }) => <Input \r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            {...field} name=\"username\" placeholder=\"username\" />}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    <FormItem>  \r\n                    {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n                    \r\n                    <FormikField\r\n                        name=\"password\"\r\n                        render={({ field }) => <Input {...field} \r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        name=\"password\" type=\"password\" placeholder=\"password\" />}\r\n                    />\r\n                    </FormItem>\r\n                <Button type=\"primary\" htmlType=\"submit\">LogIn</Button>\r\n                </Form>\r\n            </FormikForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogIn = withFormik({\r\n    mapPropsToValues({username, password}){\r\n       return { \r\n        username: username || \"\", \r\n        password: password || \"\"}\r\n    }, \r\n    validationSchema:Yup.object().shape({\r\n        username: Yup.string()\r\n        .required('please enter your username'), \r\n\r\n        password: Yup.string()\r\n        .required('please enter your password')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        axios\r\n        .post('https://reqres.in/api/users/', values)\r\n        .then(response => {\r\n            console.log(values.username)\r\n        })\r\n        .catch(error => console.log(error.response))\r\n        resetForm()\r\n\r\n    }\r\n})(LogInForm)\r\n\r\nexport default LogIn","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignUp from './SignUp'\r\nimport LogIn from './LogIn'\r\nimport img from '../img/healthy_habits.png'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport {Button, Card} from 'antd'\r\n\r\nconst SideInformation = props => {\r\n    return (\r\n    <div class=\"sidePanel\">\r\n        <p className=\"quote\">{props.quote}</p> \r\n        <p className=\"author\">{props.author}</p>\r\n        <p className=\"message\">{props.message}</p>\r\n\r\n        <Button onClick={ props.click}>{props.button}</Button>\r\n    </div>\r\n    )\r\n}\r\nconst FormContainer = props => {\r\n    const [returningUser, setReturningUser] = useState(true)\r\n    const switchForm = () => setReturningUser(!returningUser)\r\n\r\n    const OtherOption = (props) => {\r\n        \r\n        return(\r\n            <div> \r\n                <p>{props.text}</p>\r\n                <Button onClick={() => switchForm()}>{props.label}</Button>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        \r\n         <div className='container'>\r\n                <div className=\"img-container\">\r\n                    <img style={{width: \"100%\"}} src={img} alt=\"healthy\"/>\r\n                </div>\r\n                <div class=\"otherForm\">\r\n                  \r\n                </div>\r\n                \r\n                <div class=\"currentForm\">\r\n                    {\r\n                        (returningUser) ? <LogIn /> : <SignUp />\r\n                        \r\n                    }\r\n                    {\r\n                        (returningUser) ? <OtherOption text=\"Don't have an account?\" label=\"Sign Up\"/> : <OtherOption text =\" Already have an account?\" label=\"Log in\"/>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        \r\n    )\r\n}\r\nexport default FormContainer\r\n","import React, {useState} from 'react';\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport SignUp from './components/SignUp'\nimport LogIn from './components/LogIn'\nimport FormContainer from './components/FormContainer'\nfunction App() {\n \n  return (\n\n    <div className=\"App\">\n\n    <FormContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}