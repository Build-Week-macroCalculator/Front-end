{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umeko\\\\documents\\\\git\\\\front-end\\\\src\\\\components\\\\LogIn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withFormik, Field, Form as FormikForm } from 'formik';\nimport * as Yup from 'yup';\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nconst FormItem = Form.Item;\n\nconst LogInForm = ({\n  touched,\n  errors,\n  status\n}, props) => {\n  /* useEffect(() => {\r\n       if(status){\r\n       console.log(status)\r\n       }\r\n   }, [status])*/\n  return React.createElement(FormikForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, touched.username && errors.username && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, errors.username), React.createElement(Field, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"LogIn\")));\n};\n\nconst LogIn = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('please enter your username'),\n    password: Yup.string().required('please enter your password')\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus\n  }) {\n    //setStatus(values)\n    console.log(values);\n    resetForm();\n  }\n\n})(LogInForm);\nexport default LogIn;","map":{"version":3,"sources":["C:\\Users\\umeko\\documents\\git\\front-end\\src\\components\\LogIn.js"],"names":["React","useState","useEffect","withFormik","Field","Form","FormikForm","Yup","Icon","Input","Button","Checkbox","FormItem","Item","LogInForm","touched","errors","status","props","username","color","password","LogIn","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","resetForm","setStatus","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {withFormik, Field, Form as FormikForm} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst LogInForm = ({touched, errors, status}, props) =>{\r\n   /* useEffect(() => {\r\n        if(status){\r\n        console.log(status)\r\n        }\r\n    }, [status])*/\r\n    return(\r\n        <FormikForm>\r\n            <Form>\r\n                <FormItem>\r\n                    {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n                    \r\n                    <Field \r\n                     prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"text\" name=\"username\" placeholder=\"username\" />\r\n                 </FormItem>\r\n\r\n                <FormItem>  \r\n                {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n                <Field type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n                </FormItem>\r\n            <Button type=\"primary\" htmlType=\"submit\">LogIn</Button>\r\n            </Form>\r\n        </FormikForm>\r\n    )\r\n}\r\n\r\nconst LogIn = withFormik({\r\n    mapPropsToValues({username, password}){\r\n       return { \r\n        username: username || \"\", \r\n        password: password || \"\"}\r\n    }, \r\n    validationSchema:Yup.object().shape({\r\n        username: Yup.string()\r\n        .required('please enter your username'), \r\n\r\n        password: Yup.string()\r\n        .required('please enter your password')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        //setStatus(values)\r\n        console.log(values)\r\n        resetForm()\r\n    }\r\n})(LogInForm)\r\n\r\nexport default LogIn"]},"metadata":{},"sourceType":"module"}