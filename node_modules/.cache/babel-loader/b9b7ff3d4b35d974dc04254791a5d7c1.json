{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umeko\\\\documents\\\\git\\\\front-end\\\\src\\\\components\\\\LogIn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withFormik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { reset } from 'ansi-colors';\n\nconst LogInForm = ({\n  touched,\n  errors,\n  status\n}, props) => {\n  useEffect(() => {\n    if (status) {\n      console.log(status);\n    }\n  }, [status]);\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, touched.username && errors.username && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, errors.username), React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"LogIn\"));\n};\n\nconst LogIn = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('please enter your username'),\n    password: Yup.string().required('please enter your password')\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus\n  }) {\n    setStatus(values);\n    resetForm();\n  }\n\n})(LogInForm);\nexport default LogIn;","map":{"version":3,"sources":["C:\\Users\\umeko\\documents\\git\\front-end\\src\\components\\LogIn.js"],"names":["React","useState","useEffect","withFormik","Field","Form","Yup","reset","LogInForm","touched","errors","status","props","console","log","username","password","LogIn","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","resetForm","setStatus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,KAApB,EAA2BC,IAA3B,QAAsC,QAAtC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,EAA4BC,KAA5B,KAAqC;AACnDV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,MAAH,EAAU;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACC;AACJ,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;AAKA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKF,OAAO,CAACM,QAAR,IAAoBL,MAAM,CAACK,QAA3B,IAAuC;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,MAAM,CAACK,QAArC,CAF5C,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAMKN,OAAO,CAACO,QAAR,IAAoBN,MAAM,CAACM,QAA3B,IAAuC;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BN,MAAM,CAACM,QAArC,CAN5C,EAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,CADJ;AAYH,CAlBD;;AAoBA,MAAMC,KAAK,GAAGd,UAAU,CAAC;AACrBe,EAAAA,gBAAgB,CAAC;AAACH,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,EAAsB;AACnC,WAAO;AACND,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADhB;AAENC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFhB,KAAP;AAGF,GALoB;;AAMrBG,EAAAA,gBAAgB,EAACb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAChCN,IAAAA,QAAQ,EAAET,GAAG,CAACgB,MAAJ,GACTC,QADS,CACA,4BADA,CADsB;AAIhCP,IAAAA,QAAQ,EAAEV,GAAG,CAACgB,MAAJ,GACTC,QADS,CACA,4BADA;AAJsB,GAAnB,CANI;;AAcrBC,EAAAA,YAAY,CAACC,MAAD,EAAS;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAT,EAAgC;AACxCA,IAAAA,SAAS,CAACF,MAAD,CAAT;AACAC,IAAAA,SAAS;AACZ;;AAjBoB,CAAD,CAAV,CAkBXlB,SAlBW,CAAd;AAoBA,eAAeS,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {withFormik, Field, Form} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { reset } from 'ansi-colors'\r\n\r\nconst LogInForm = ({touched, errors, status}, props) =>{\r\n    useEffect(() => {\r\n        if(status){\r\n        console.log(status)\r\n        }\r\n    }, [status])\r\n    return(\r\n        <Form>\r\n            \r\n            {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n            <Field type=\"text\" name=\"username\" placeholder=\"username\" />\r\n\r\n             \r\n            {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n            <Field type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n            <Button type=\"primary\">LogIn</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst LogIn = withFormik({\r\n    mapPropsToValues({username, password}){\r\n       return { \r\n        username: username || \"\", \r\n        password: password || \"\"}\r\n    }, \r\n    validationSchema:Yup.object().shape({\r\n        username: Yup.string()\r\n        .required('please enter your username'), \r\n\r\n        password: Yup.string()\r\n        .required('please enter your password')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        setStatus(values)\r\n        resetForm()\r\n    }\r\n})(LogInForm)\r\n\r\nexport default LogIn"]},"metadata":{},"sourceType":"module"}