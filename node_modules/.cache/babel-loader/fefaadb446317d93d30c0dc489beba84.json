{"ast":null,"code":"import React,{useState,useEffect}from'react';import{withFormik,Field,Form as FormikForm,Field as FormikField}from'formik';import*as Yup from'yup';import axios from'axios';//ant\nimport'antd/dist/antd.css';import{Form,Icon,Input,Button,Checkbox}from'antd';var FormItem=Form.Item;var LogInForm=function LogInForm(_ref,props){var touched=_ref.touched,errors=_ref.errors,status=_ref.status;return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Login\"),React.createElement(FormikForm,null,React.createElement(Form,null,React.createElement(FormItem,null,touched.username&&errors.username&&React.createElement(\"p\",{className:\"error_message\"},errors.username),React.createElement(FormikField,{name:\"username\",render:function render(_ref2){var field=_ref2.field;return React.createElement(Input,Object.assign({prefix:React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.25)'}})},field,{name:\"username\",placeholder:\"username\"}));}})),React.createElement(FormItem,null,touched.password&&errors.password&&React.createElement(\"p\",{className:\"error_message\"},errors.password),React.createElement(FormikField,{name:\"password\",render:function render(_ref3){var field=_ref3.field;return React.createElement(Input,Object.assign({},field,{prefix:React.createElement(Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),name:\"password\",type:\"password\",placeholder:\"password\"}));}})),React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"LogIn\"))));};var LogIn=withFormik({mapPropsToValues:function mapPropsToValues(_ref4){var username=_ref4.username,password=_ref4.password;return{username:username||\"\",password:password||\"\"};},validationSchema:Yup.object().shape({username:Yup.string().required('please enter your username'),password:Yup.string().required('please enter your password')}),handleSubmit:function handleSubmit(values,_ref5){var resetForm=_ref5.resetForm,setStatus=_ref5.setStatus;axios.post('https://reqres.in/api/users/',values).then(function(response){console.log(values.username);}).catch(function(error){return console.log(error.response);});resetForm();}})(LogInForm);export default LogIn;","map":{"version":3,"sources":["C:\\Users\\umeko\\documents\\git\\front-end\\src\\components\\LogIn.js"],"names":["React","useState","useEffect","withFormik","Field","Form","FormikForm","FormikField","Yup","axios","Icon","Input","Button","Checkbox","FormItem","Item","LogInForm","props","touched","errors","status","username","field","color","password","LogIn","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","resetForm","setStatus","post","then","response","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {withFormik, Field, Form as FormikForm, Field as FormikField} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n//ant\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst LogInForm = ({touched, errors, status}, props) =>{\r\n   \r\n    \r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <FormikForm>\r\n                \r\n                <Form>\r\n                    <FormItem>\r\n                        {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n                        \r\n                        <FormikField\r\n                            name=\"username\"\r\n                            render={({ field }) => <Input \r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            {...field} name=\"username\" placeholder=\"username\" />}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    <FormItem>  \r\n                    {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n                    \r\n                    <FormikField\r\n                        name=\"password\"\r\n                        render={({ field }) => <Input {...field} \r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        name=\"password\" type=\"password\" placeholder=\"password\" />}\r\n                    />\r\n                    </FormItem>\r\n                <Button type=\"primary\" htmlType=\"submit\">LogIn</Button>\r\n                </Form>\r\n            </FormikForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogIn = withFormik({\r\n    mapPropsToValues({username, password}){\r\n       return { \r\n        username: username || \"\", \r\n        password: password || \"\"}\r\n    }, \r\n    validationSchema:Yup.object().shape({\r\n        username: Yup.string()\r\n        .required('please enter your username'), \r\n\r\n        password: Yup.string()\r\n        .required('please enter your password')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        axios\r\n        .post('https://reqres.in/api/users/', values)\r\n        .then(response => {\r\n            console.log(values.username)\r\n        })\r\n        .catch(error => console.log(error.response))\r\n        resetForm()\r\n\r\n    }\r\n})(LogInForm)\r\n\r\nexport default LogIn"]},"metadata":{},"sourceType":"module"}