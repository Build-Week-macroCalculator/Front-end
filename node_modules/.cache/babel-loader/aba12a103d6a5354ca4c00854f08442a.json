{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umeko\\\\documents\\\\git\\\\front-end\\\\src\\\\components\\\\LogIn.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withFormik, Field, Form as FormikForm, Field as FormikField } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios'; //ant\n\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nconst FormItem = Form.Item;\n\nconst LogInForm = ({\n  touched,\n  errors,\n  status\n}, props) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Login\"), React.createElement(FormikForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, touched.username && errors.username && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, errors.username), React.createElement(FormikField, {\n    name: \"username\",\n    render: ({\n      field\n    }) => React.createElement(Input, Object.assign({\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })\n    }, field, {\n      name: \"username\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(FormItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, errors.password), React.createElement(FormikField, {\n    name: \"password\",\n    render: ({\n      field\n    }) => React.createElement(Input, Object.assign({}, field, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }),\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"LogIn\"))));\n};\n\nconst LogIn = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('please enter your username'),\n    password: Yup.string().required('please enter your password')\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus\n  }) {\n    axios.post('https://reqres.in/api/users/', values).then(response => {\n      console.log(values);\n    }).catch(error => console.log(error.response));\n    resetForm();\n  }\n\n})(LogInForm);\nexport default LogIn;","map":{"version":3,"sources":["C:\\Users\\umeko\\documents\\git\\front-end\\src\\components\\LogIn.js"],"names":["React","useState","useEffect","withFormik","Field","Form","FormikForm","FormikField","Yup","axios","Icon","Input","Button","Checkbox","FormItem","Item","LogInForm","touched","errors","status","props","username","field","color","password","LogIn","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","resetForm","setStatus","post","then","response","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {withFormik, Field, Form as FormikForm, Field as FormikField} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n//ant\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item\r\n\r\nconst LogInForm = ({touched, errors, status}, props) =>{\r\n   \r\n    \r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <FormikForm>\r\n                \r\n                <Form>\r\n                    <FormItem>\r\n                        {touched.username && errors.username && <p className=\"error_message\">{errors.username}</p>}\r\n                        \r\n                        <FormikField\r\n                            name=\"username\"\r\n                            render={({ field }) => <Input \r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            {...field} name=\"username\" placeholder=\"username\" />}\r\n                        />\r\n                    </FormItem>\r\n\r\n                    <FormItem>  \r\n                    {touched.password && errors.password && <p className=\"error_message\">{errors.password}</p>}\r\n                    \r\n                    <FormikField\r\n                        name=\"password\"\r\n                        render={({ field }) => <Input {...field} \r\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        name=\"password\" type=\"password\" placeholder=\"password\" />}\r\n                    />\r\n                    </FormItem>\r\n                <Button type=\"primary\" htmlType=\"submit\">LogIn</Button>\r\n                </Form>\r\n            </FormikForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LogIn = withFormik({\r\n    mapPropsToValues({username, password}){\r\n       return { \r\n        username: username || \"\", \r\n        password: password || \"\"}\r\n    }, \r\n    validationSchema:Yup.object().shape({\r\n        username: Yup.string()\r\n        .required('please enter your username'), \r\n\r\n        password: Yup.string()\r\n        .required('please enter your password')\r\n\r\n    }), \r\n    handleSubmit(values, {resetForm, setStatus}){\r\n        axios\r\n        .post('https://reqres.in/api/users/', values)\r\n        .then(response => {\r\n            console.log(values)\r\n        })\r\n        .catch(error => console.log(error.response))\r\n        resetForm()\r\n\r\n    }\r\n})(LogInForm)\r\n\r\nexport default LogIn"]},"metadata":{},"sourceType":"module"}